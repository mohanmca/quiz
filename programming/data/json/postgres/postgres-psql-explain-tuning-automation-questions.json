[
  {"type":"radiogroup","name":"psql_q1","title":"Which psql flag reads commands from a file and executes them non-interactively?","choices":["-f","-c","-1","-v"],"correctAnswer":"-f"},
  {"type":"radiogroup","name":"psql_q2","title":"What does psql flag -c do?","choices":["Connect to database","Execute a single command and exit","Print connection info","Toggle autocommit"],"correctAnswer":"Execute a single command and exit"},
  {"type":"radiogroup","name":"psql_q3","title":"Which psql flags are best for scripting with clean, parseable output?","choices":["--echo-all --single-transaction","-A -t -q","--expanded --pset pager=off","--csv -E"],"correctAnswer":"-A -t -q"},
  {"type":"radiogroup","name":"psql_q4","title":"In psql, which option disables the pager to avoid interactive paging?","choices":["\\pset pager off","--no-pager","-q","-X"],"correctAnswer":"\\pset pager off"},
  {"type":"radiogroup","name":"psql_q5","title":"How do you pass a variable into a psql script?","choices":["psql -v name=value -f script.sql","psql --set-script=name script.sql","psql --varfile script.sql name=value","psql -S name script.sql"],"correctAnswer":"psql -v name=value -f script.sql"},
  {"type":"radiogroup","name":"psql_q6","title":"Which psql meta-command includes execution time per statement for quick timing?","choices":["\\set timing on","\\timing on","\\time on","\\show timing"],"correctAnswer":"\\timing on"},
  {"type":"radiogroup","name":"psql_q7","title":"Which command prints the query plan without executing it?","choices":["EXPLAIN","EXPLAIN ANALYZE","EXPLAIN (BUFFERS)","EXPLAIN (ANALYZE, VERBOSE)"],"correctAnswer":"EXPLAIN"},
  {"type":"radiogroup","name":"psql_q8","title":"Which EXPLAIN option shows actual runtime, row counts, and buffer usage?","choices":["ANALYZE, BUFFERS","COSTS OFF","VERBOSE ONLY","SET enable_seqscan=off"],"correctAnswer":"ANALYZE, BUFFERS"},
  {"type":"radiogroup","name":"psql_q9","title":"To get machine-readable plan details for tooling, use:","choices":["EXPLAIN (FORMAT TEXT)","EXPLAIN (FORMAT JSON)","EXPLAIN (FORMAT YAML)","EXPLAIN (FORMAT XML)"],"correctAnswer":"EXPLAIN (FORMAT JSON)"},
  {"type":"radiogroup","name":"psql_q10","title":"Which plan node typically indicates an indexed lookup per outer row?","choices":["Seq Scan","Index Scan","Bitmap Heap Scan","Gather Merge"],"correctAnswer":"Index Scan"},
  {"type":"radiogroup","name":"psql_q11","title":"Bitmap Heap Scan + Bitmap Index Scan is often chosen when:","choices":["Predicate is not selective","Multiple conditions combine to good selectivity","ORDER BY must be preserved","Index only scan is guaranteed"],"correctAnswer":"Multiple conditions combine to good selectivity"},
  {"type":"radiogroup","name":"psql_q12","title":"Which join is best for large equi-joins when enough work_mem is available?","choices":["Nested Loop","Merge Join","Hash Join","Loop Join"],"correctAnswer":"Hash Join"},
  {"type":"radiogroup","name":"psql_q13","title":"Merge Join requires:","choices":["Sorted inputs on join keys","Hashable keys","Very small inputs","Parallel workers"],"correctAnswer":"Sorted inputs on join keys"},
  {"type":"radiogroup","name":"psql_q14","title":"Nested Loop can be ideal when:","choices":["Both sides are huge","The inner side has a selective index lookup","Only non-equi joins are used","work_mem is very high"],"correctAnswer":"The inner side has a selective index lookup"},
  {"type":"radiogroup","name":"psql_q15","title":"Which GUC directly affects planner’s I/O vs CPU tradeoffs?","choices":["work_mem","random_page_cost","shared_buffers","effective_cache_size"],"correctAnswer":"random_page_cost"},
  {"type":"radiogroup","name":"psql_q16","title":"Lowering random_page_cost generally makes the planner:","choices":["Prefer sequential scans","Prefer index scans/bitmap scans","Disable hash joins","Always choose parallel plans"],"correctAnswer":"Prefer index scans/bitmap scans"},
  {"type":"radiogroup","name":"psql_q17","title":"Which setting helps the planner estimate cached data availability?","choices":["effective_cache_size","maintenance_work_mem","synchronous_commit","enable_seqscan"],"correctAnswer":"effective_cache_size"},
  {"type":"radiogroup","name":"psql_q18","title":"A reliable way to compare query performance before/after an index is:","choices":["Use EXPLAIN only","Use EXPLAIN (ANALYZE, BUFFERS) and compare timing + rows + buffers","Only compare total cost numbers","Check pg_stat_statements exclusively"],"correctAnswer":"Use EXPLAIN (ANALYZE, BUFFERS) and compare timing + rows + buffers"},
  {"type":"radiogroup","name":"psql_q19","title":"Which psql flags help you time multiple runs for stability?","choices":["-f and -c","-q and -X","-v and --csv","\\timing on and a loop in Bash"],"correctAnswer":"\\timing on and a loop in Bash"},
  {"type":"radiogroup","name":"psql_q20","title":"To generate an index-only scan, which condition is necessary?","choices":["High work_mem","Index contains all required columns and visibility map bits are set","Table fits in RAM","Parallelism enabled"],"correctAnswer":"Index contains all required columns and visibility map bits are set"},
  {"type":"radiogroup","name":"psql_q21","title":"Which EXPLAIN ANALYZE indicator signals cardinality misestimation?","choices":["Rows match Plan Rows closely","Actual Rows vastly different from Plan Rows","Buffers read are zero","Timing is stable"],"correctAnswer":"Actual Rows vastly different from Plan Rows"},
  {"type":"radiogroup","name":"psql_q22","title":"Which stats help with correlated predicates?","choices":["extended statistics: multi-column MCV/frequencies and functional dependencies","analyze_threshold only","pg_stat_activity","pg_settings"],"correctAnswer":"extended statistics: multi-column MCV/frequencies and functional dependencies"},
  {"type":"radiogroup","name":"psql_q23","title":"How to create extended statistics for columns (a,b)?","choices":["CREATE STATISTICS s ON a,b FROM t; ANALYZE t;","CREATE EXTENDED STATS ON a,b;","ALTER TABLE t ADD STATISTICS(a,b);","ANALYZE EXTENDED t(a,b);"],"correctAnswer":"CREATE STATISTICS s ON a,b FROM t; ANALYZE t;"},
  {"type":"radiogroup","name":"psql_q24","title":"Which GUC controls hash table memory before spilling?","choices":["shared_buffers","work_mem","maintenance_work_mem","temp_buffers"],"correctAnswer":"work_mem"},
  {"type":"radiogroup","name":"psql_q25","title":"To script before/after index comparison safely in a migration, you should:","choices":["Run DDL in autocommit","Use a transaction, gather EXPLAIN ANALYZE metrics before/after, and rollback if needed in staging","Only trust planner costs","Disable autovacuum"],"correctAnswer":"Use a transaction, gather EXPLAIN ANALYZE metrics before/after, and rollback if needed in staging"},
  {"type":"radiogroup","name":"psql_q26","title":"Which psql option makes output unaligned for easier parsing?","choices":["-A","-t","-q","--csv"],"correctAnswer":"-A"},
  {"type":"radiogroup","name":"psql_q27","title":"What does psql -t do?","choices":["Suppress column names and footer","Enable transactions","Show timing only","Truncate output"],"correctAnswer":"Suppress column names and footer"},
  {"type":"radiogroup","name":"psql_q28","title":"Which pattern is recommended for error handling in SQL scripts?","choices":["Ignore errors and continue","Wrap critical DDL/DML in BEGIN; EXCEPTION; END blocks (pl/pgSQL) or use transactions with checks","Disable constraints","Use SET client_min_messages=error"],"correctAnswer":"Wrap critical DDL/DML in BEGIN; EXCEPTION; END blocks (pl/pgSQL) or use transactions with checks"},
  {"type":"radiogroup","name":"psql_q29","title":"In Bash automation with psql, which practice is safest?","choices":["Hardcode passwords in scripts","Use PGPASSWORD in environment or .pgpass, and set -euo pipefail","Always run as superuser","Disable SSL"],"correctAnswer":"Use PGPASSWORD in environment or .pgpass, and set -euo pipefail"},
  {"type":"radiogroup","name":"psql_q30","title":"To capture an EXPLAIN JSON plan into a file via psql:","choices":["psql -XtA -c 'EXPLAIN (FORMAT JSON) ...' > plan.json","psql -f plan.sql plan.json","psql --dump-plan plan.json","pg_dump --explain > plan.json"],"correctAnswer":"psql -XtA -c 'EXPLAIN (FORMAT JSON) ...' > plan.json"},
  {"type":"radiogroup","name":"psql_q31","title":"What is the role of the cost-based optimizer?","choices":["Always chooses smallest output","Explores plan alternatives and picks lowest estimated cost","Picks plans randomly to avoid bias","Executes all plans to find fastest"],"correctAnswer":"Explores plan alternatives and picks lowest estimated cost"},
  {"type":"radiogroup","name":"psql_q32","title":"Which command helps you test different plan shapes by disabling a join type?","choices":["SET join_mode = 'hash';","SET enable_hashjoin = off;","ALTER SYSTEM enable_mergejoin = off;","RESET enable_nestloop;"],"correctAnswer":"SET enable_hashjoin = off;"},
  {"type":"radiogroup","name":"psql_q33","title":"To run multiple SQL files atomically in psql:","choices":["psql -f a.sql -f b.sql","psql -1 -f a.sql -f b.sql","psql --atomic -f a.sql b.sql","psql -t -A -f a.sql b.sql"],"correctAnswer":"psql -1 -f a.sql -f b.sql"},
  {"type":"radiogroup","name":"psql_q34","title":"Which psql variable expands to the current database name?","choices":[" :DB ",":DBNAME",":DBNAME()",":DB:"],"correctAnswer":":DBNAME"},
  {"type":"radiogroup","name":"psql_q35","title":"What’s a good way to verify index usefulness across queries?","choices":["Enable enable_indexscan=off","Use pg_stat_statements to compare call counts/mean time before and after, plus EXPLAIN ANALYZE on representative queries","Trust planner costs only","Drop and recreate all indexes"],"correctAnswer":"Use pg_stat_statements to compare call counts/mean time before and after, plus EXPLAIN ANALYZE on representative queries"},
  {"type":"radiogroup","name":"psql_q36","title":"In EXPLAIN ANALYZE, a high 'Rows Removed by Filter' under Seq Scan suggests:","choices":["Index-only scan is used","Predicate is evaluated early and selective; consider an index","Hash aggregation chosen","Parallel workers idle"],"correctAnswer":"Predicate is evaluated early and selective; consider an index"},
  {"type":"radiogroup","name":"psql_q37","title":"To capture errors and stop on first failure in Bash:","choices":["set -euo pipefail","trap EXIT","set +e","echo continue"],"correctAnswer":"set -euo pipefail"},
  {"type":"radiogroup","name":"psql_q38","title":"Which EXPLAIN field indicates misestimation at a node?","choices":["Actual Rows vs Plan Rows disparity","Shared Hit Blocks only","Planning Time","JIT Functions count"],"correctAnswer":"Actual Rows vs Plan Rows disparity"},
  {"type":"radiogroup","name":"psql_q39","title":"For query tuning, start with:","choices":["Schema redesign always","A baseline EXPLAIN (ANALYZE, BUFFERS) and reading from top node down","Raising work_mem blindly","Disabling seqscan globally"],"correctAnswer":"A baseline EXPLAIN (ANALYZE, BUFFERS) and reading from top node down"},
  {"type":"radiogroup","name":"psql_q40","title":"In automation, to parameterize schema/table names safely:","choices":["String concatenation in Bash only","Use psql -v vars with validation and quote_ident in functions when dynamic SQL is required","Trust user input","Disable search_path"],"correctAnswer":"Use psql -v vars with validation and quote_ident in functions when dynamic SQL is required"},
  {"type":"radiogroup","name":"psql_q41","title":"EXPLAIN without ANALYZE will:","choices":["Execute the query fully","Return an estimated plan without running the query","Run only index scans","Disable timing collection"],"correctAnswer":"Return an estimated plan without running the query"},
  {"type":"radiogroup","name":"psql_q42","title":"Which EXPLAIN option requires ANALYZE to be enabled?","choices":["COSTS","BUFFERS","FORMAT","VERBOSE"],"correctAnswer":"BUFFERS"},
  {"type":"radiogroup","name":"psql_q43","title":"What does EXPLAIN (COSTS OFF) hide?","choices":["Join conditions","Estimated startup/total cost, rows, width","Actual timing","Parallel workers"],"correctAnswer":"Estimated startup/total cost, rows, width"},
  {"type":"radiogroup","name":"psql_q44","title":"EXPLAIN (VERBOSE) additionally shows:","choices":["Full result set","Trigger body source code","Output columns (target lists) and extra details","Only buffer hits"],"correctAnswer":"Output columns (target lists) and extra details"},
  {"type":"radiogroup","name":"psql_q45","title":"What does EXPLAIN (ANALYZE, TIMING OFF) do?","choices":["Skips row counts","Skips per-node timing while still executing and counting rows","Disables BUFFERS reporting","Forces text format"],"correctAnswer":"Skips per-node timing while still executing and counting rows"},
  {"type":"radiogroup","name":"psql_q46","title":"EXPLAIN (FORMAT JSON) returns:","choices":["A JSON array with a single object whose 'Plan' field contains the tree","A CSV table","Only textual plan","Only settings diff"],"correctAnswer":"A JSON array with a single object whose 'Plan' field contains the tree"},
  {"type":"radiogroup","name":"psql_q47","title":"Which EXPLAIN option displays GUCs that affected planning?","choices":["SETTINGS","SUMMARY","BUFFERS","JIT"],"correctAnswer":"SETTINGS"},
  {"type":"radiogroup","name":"psql_q48","title":"EXPLAIN (SUMMARY) provides:","choices":["Only index usage","Planning and execution time totals","Only parallel workers used","Only I/O statistics"],"correctAnswer":"Planning and execution time totals"},
  {"type":"radiogroup","name":"psql_q49","title":"In EXPLAIN output, 'rows' under a node is:","choices":["Exact number of returned rows","Estimated number of rows output by that node","Table row count","Rows removed by filters only"],"correctAnswer":"Estimated number of rows output by that node"},
  {"type":"radiogroup","name":"psql_q50","title":"In EXPLAIN (ANALYZE), 'Actual Rows' indicates:","choices":["Rows in the table","Estimated rows","Actual number of tuples processed/output","Rows per parallel worker"],"correctAnswer":"Actual number of tuples processed/output"},
  {"type":"radiogroup","name":"psql_q51","title":"Which command updates planner statistics for better estimates?","choices":["VACUUM FREEZE","ANALYZE","REINDEX","CHECKPOINT"],"correctAnswer":"ANALYZE"},
  {"type":"radiogroup","name":"psql_q52","title":"Raising default_statistics_target generally:","choices":["Lowers ANALYZE time and improves estimates","Raises ANALYZE time and catalog size but improves estimates on skewed data","Disables MCV lists","Forces parallel plans"],"correctAnswer":"Raises ANALYZE time and catalog size but improves estimates on skewed data"},
  {"type":"radiogroup","name":"psql_q53","title":"Set per-column stats target with:","choices":["ALTER TABLE t SET STATISTICS (col = 100)","ALTER TABLE t ALTER COLUMN col SET STATISTICS 100","CREATE STATISTICS ON col (100)","SET statistics_target = 100 FOR col"],"correctAnswer":"ALTER TABLE t ALTER COLUMN col SET STATISTICS 100"},
  {"type":"radiogroup","name":"psql_q54","title":"planner-stats include which per-column elements?","choices":["Only null fraction","MCV list + frequencies, histogram bounds, null fraction, correlation, ndistinct","Only histogram","Only ndistinct"],"correctAnswer":"MCV list + frequencies, histogram bounds, null fraction, correlation, ndistinct"},
  {"type":"radiogroup","name":"psql_q55","title":"Which command creates extended statistics across columns a,b on table t?","choices":["CREATE STATISTICS s (dependencies, mcv, ndistinct) ON a,b FROM t;","CREATE EXTENDED STATISTICS ON a,b FROM t;","ANALYZE EXTENDED t(a,b);","ALTER TABLE t ADD STATISTICS (a,b);"],"correctAnswer":"CREATE STATISTICS s (dependencies, mcv, ndistinct) ON a,b FROM t;"},
  {"type":"radiogroup","name":"psql_q56","title":"Extended statistics help the planner with:","choices":["I/O scheduling","Correlated predicates, joint distinct counts, and common value combinations","Replication lag","Autovacuum scheduling"],"correctAnswer":"Correlated predicates, joint distinct counts, and common value combinations"},
  {"type":"radiogroup","name":"psql_q57","title":"Autovacuum decides to ANALYZE a table based on:","choices":["shared_buffers size only","autovacuum_analyze_threshold and autovacuum_analyze_scale_factor","random_page_cost","effective_cache_size"],"correctAnswer":"autovacuum_analyze_threshold and autovacuum_analyze_scale_factor"},
  {"type":"radiogroup","name":"psql_q58","title":"In EXPLAIN (BUFFERS), 'Shared Hit Blocks' means:","choices":["Blocks read from disk","Blocks found already in shared buffers","Blocks written to disk","Blocks pinned by autovacuum"],"correctAnswer":"Blocks found already in shared buffers"},
  {"type":"radiogroup","name":"psql_q59","title":"What do 'startup cost' and 'total cost' represent?","choices":["Exact time in ms","Abstract cost units estimating work to produce first row vs all rows","Number of rows","I/O only"],"correctAnswer":"Abstract cost units estimating work to produce first row vs all rows"},
  {"type":"radiogroup","name":"psql_q60","title":"A high correlation statistic for a column suggests:","choices":["Values are random relative to physical order","Values are ordered similarly to table storage order (useful for index/seq scan decisions)","Data has many nulls","Column is unique"],"correctAnswer":"Values are ordered similarly to table storage order (useful for index/seq scan decisions)"}
  ,
  {"type":"radiogroup","name":"psql_q61","title":"Which new PG16 view helps analyze backend and IO activity complementing EXPLAIN BUFFERS?","choices":["pg_stat_io","pg_stat_bgwriter","pg_statio_user_indexes","pg_stat_wal"],"correctAnswer":"pg_stat_io"},
  {"type":"radiogroup","name":"psql_q62","title":"For production-safe index rebuild to reduce B-Tree bloat, use:","choices":["VACUUM FULL INDEX","REINDEX","REINDEX CONCURRENTLY","CLUSTER"],"correctAnswer":"REINDEX CONCURRENTLY"},
  {"type":"radiogroup","name":"psql_q63","title":"A partial index is most effective when:","choices":["The predicate matches a small hot subset of rows","The table is tiny","All rows are updated frequently","The column is uniformly distributed"],"correctAnswer":"The predicate matches a small hot subset of rows"},
  {"type":"radiogroup","name":"psql_q64","title":"When evaluating suggestions from an index advisor, you should:","choices":["Create all suggested indexes in production immediately","Validate each suggestion with EXPLAIN (ANALYZE, BUFFERS), check regressions, and monitor pg_stat_statements","Ignore suggestions for OLTP workloads","Only rely on planner costs"],"correctAnswer":"Validate each suggestion with EXPLAIN (ANALYZE, BUFFERS), check regressions, and monitor pg_stat_statements"},
  {"type":"radiogroup","name":"psql_q65","title":"Which combo best detects and confirms index bloat?","choices":["pg_relation_size + REINDEX FULL","pg_stat_user_indexes + pg_relation_size and optional pgstattuple for bloat ratio","EXPLAIN (COSTS OFF)","pg_stat_bgwriter only"],"correctAnswer":"pg_stat_user_indexes + pg_relation_size and optional pgstattuple for bloat ratio"},
  {"type":"radiogroup","name":"psql_q66","title":"B-Tree page splits and HOT updates relate to which maintenance concern?","choices":["Write amplification and index bloat","Foreign key cascades","Checkpoint frequency","Autovacuum freeze"],"correctAnswer":"Write amplification and index bloat"},
  {"type":"radiogroup","name":"psql_q67","title":"Where can you find authoritative docs on Postgres index internals?","choices":["Only blog posts","The PostgreSQL source tree READMEs under src/backend/access (nbtree/gin/brin)","Random mailing list archives","Stack Overflow"],"correctAnswer":"The PostgreSQL source tree READMEs under src/backend/access (nbtree/gin/brin)"},
  {"type":"radiogroup","name":"psql_q68","title":"How can pg_stat_io (PG16) help in tuning?","choices":["It replaces EXPLAIN","It shows per-io-type stats helping correlate high read activity with queries and buffer stats","It disables WAL","It tunes work_mem automatically"],"correctAnswer":"It shows per-io-type stats helping correlate high read activity with queries and buffer stats"},
  {"type":"radiogroup","name":"psql_q69","title":"What does the PostgreSQL planner primarily minimize during planning?","choices":["Rows returned","Estimated execution cost","Planning time","WAL size"],"correctAnswer":"Estimated execution cost"},
  {"type":"radiogroup","name":"psql_q70","title":"Which parameters shape I/O vs CPU balance in the cost model?","choices":["shared_buffers only","random_page_cost and seq_page_cost vs cpu_* costs","effective_io_concurrency only","max_parallel_workers only"],"correctAnswer":"random_page_cost and seq_page_cost vs cpu_* costs"},
  {"type":"radiogroup","name":"psql_q71","title":"Lowering random_page_cost generally nudges the planner to:","choices":["Prefer sequential scans","Prefer index/bitmap scans","Disable indexes","Choose hash joins only"],"correctAnswer":"Prefer index/bitmap scans"},
  {"type":"radiogroup","name":"psql_q72","title":"What does effective_cache_size represent to the planner?","choices":["Exact cache size of PostgreSQL","Heuristic of OS+shared cache available for caching data","work_mem per query","temp_buffers size"],"correctAnswer":"Heuristic of OS+shared cache available for caching data"},
  {"type":"radiogroup","name":"psql_q73","title":"Which join algorithms can PostgreSQL choose?","choices":["Nested Loop, Merge Join, Hash Join","Only Hash Join","Only Merge Join","Nested Loop and Sort Join"],"correctAnswer":"Nested Loop, Merge Join, Hash Join"},
  {"type":"radiogroup","name":"psql_q74","title":"Which setting influences hash table memory before spilling to disk?","choices":["shared_buffers","work_mem","maintenance_work_mem","effective_cache_size"],"correctAnswer":"work_mem"},
  {"type":"radiogroup","name":"psql_q75","title":"Which GUC enables JIT compilation globally?","choices":["jit","enable_jit","jit_on","jit_engine"],"correctAnswer":"jit"},
  {"type":"radiogroup","name":"psql_q76","title":"Which cost thresholds gate JIT usage?","choices":["jit_above_cost, jit_inline_above_cost, jit_expressions_above_cost","work_mem, maintenance_work_mem","seq_page_cost, random_page_cost","cpu_tuple_cost only"],"correctAnswer":"jit_above_cost, jit_inline_above_cost, jit_expressions_above_cost"},
  {"type":"radiogroup","name":"psql_q77","title":"JIT is most beneficial for:","choices":["Very small queries","Long-running CPU-bound queries with heavy expression evaluation","I/O-bound queries always","DDL"],"correctAnswer":"Long-running CPU-bound queries with heavy expression evaluation"},
  {"type":"radiogroup","name":"psql_q78","title":"To test a plan variant, you can disable a join type with:","choices":["SET enable_hashjoin = off;","ALTER SYSTEM disable hashjoin;","RESET join_types;","SET join_mode = nestedloop;"],"correctAnswer":"SET enable_hashjoin = off;"},
  {"type":"radiogroup","name":"psql_q79","title":"Parallel plans require which preconditions?","choices":["Parallel-safe functions, sufficient workers, and query big enough","Always enabled by default without checks","Only sequential scans are parallel","Only hash joins are parallel"],"correctAnswer":"Parallel-safe functions, sufficient workers, and query big enough"},
  {"type":"radiogroup","name":"psql_q80","title":"Which settings bound parallelism in PostgreSQL?","choices":["max_worker_processes only","max_parallel_workers and max_parallel_workers_per_gather","shared_buffers and work_mem","jit and jit_above_cost"],"correctAnswer":"max_parallel_workers and max_parallel_workers_per_gather"},
  {"type":"radiogroup","name":"psql_q81","title":"Leader participation in a parallel query means:","choices":["Leader never works","Leader can execute a part of the plan","Leader only schedules workers","Leader becomes idle"],"correctAnswer":"Leader can execute a part of the plan"}
]
