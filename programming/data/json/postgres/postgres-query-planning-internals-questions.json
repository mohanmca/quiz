[
  {"type":"radiogroup","name":"plan_q1","title":"What does the PostgreSQL planner try to minimize?","choices":["Rows returned","Estimated execution cost","Planning time","WAL size"],"correctAnswer":"Estimated execution cost"},
  {"type":"radiogroup","name":"plan_q2","title":"Which parameters shape I/O vs CPU balance in the cost model?","choices":["shared_buffers only","random_page_cost and seq_page_cost vs cpu_* costs","effective_io_concurrency only","max_parallel_workers only"],"correctAnswer":"random_page_cost and seq_page_cost vs cpu_* costs"},
  {"type":"radiogroup","name":"plan_q3","title":"Lowering random_page_cost typically makes the planner:","choices":["Prefer sequential scans more","Prefer index/bitmap scans more","Disable indexes","Choose hash joins only"],"correctAnswer":"Prefer index/bitmap scans more"},
  {"type":"radiogroup","name":"plan_q4","title":"What does effective_cache_size represent?","choices":["Exact cache size of PostgreSQL","Heuristic of OS+shared cache available for caching data","work_mem per query","temp_buffers size"],"correctAnswer":"Heuristic of OS+shared cache available for caching data"},
  {"type":"radiogroup","name":"plan_q5","title":"Which EXPLAIN variant runs the query and shows runtime + buffers?","choices":["EXPLAIN","EXPLAIN (ANALYZE, BUFFERS)","EXPLAIN (COSTS OFF)","EXPLAIN (VERBOSE ONLY)"],"correctAnswer":"EXPLAIN (ANALYZE, BUFFERS)"},
  {"type":"radiogroup","name":"plan_q6","title":"Which join algorithms can PostgreSQL choose?","choices":["Nested Loop, Merge Join, Hash Join","Only Hash Join","Only Merge Join","Nested Loop and Sort Join"],"correctAnswer":"Nested Loop, Merge Join, Hash Join"},
  {"type":"radiogroup","name":"plan_q7","title":"When are Hash Joins typically preferred?","choices":["Very small inner relation","Equi-joins with large inputs and enough memory","Non-equi joins","When ORDER BY is required"],"correctAnswer":"Equi-joins with large inputs and enough memory"},
  {"type":"radiogroup","name":"plan_q8","title":"Merge Join requires:","choices":["Hashable join keys","Sorted inputs on join keys","Equal row counts","Parallelism enabled"],"correctAnswer":"Sorted inputs on join keys"},
  {"type":"radiogroup","name":"plan_q9","title":"Nested Loop often suits:","choices":["Large-large joins with uniform data","Small outer with selective index scan on inner","Only non-equi joins","Only when hash_mem is high"],"correctAnswer":"Small outer with selective index scan on inner"},
  {"type":"radiogroup","name":"plan_q10","title":"Which setting influences hash table memory before spilling?","choices":["shared_buffers","work_mem","maintenance_work_mem","effective_cache_size"],"correctAnswer":"work_mem"},
  {"type":"radiogroup","name":"plan_q11","title":"Bitmap Heap Scan is typically chosen when:","choices":["Predicate is highly selective and multi-condition","No index exists","Data fits in memory only","Order must be preserved"],"correctAnswer":"Predicate is highly selective and multi-condition"},
  {"type":"radiogroup","name":"plan_q12","title":"Which GUC enables JIT compilation globally?","choices":["jit","enable_jit","jit_on","jit_engine"],"correctAnswer":"jit"},
  {"type":"radiogroup","name":"plan_q13","title":"Which cost thresholds gate JIT usage?","choices":["jit_above_cost, jit_inline_above_cost, jit_expressions_above_cost","work_mem, maintenance_work_mem","seq_page_cost, random_page_cost","cpu_tuple_cost only"],"correctAnswer":"jit_above_cost, jit_inline_above_cost, jit_expressions_above_cost"},
  {"type":"radiogroup","name":"plan_q14","title":"JIT is most beneficial for:","choices":["Very small queries","Long-running CPU-bound queries with heavy expression evaluation","I/O-bound queries always","DDL"],"correctAnswer":"Long-running CPU-bound queries with heavy expression evaluation"},
  {"type":"radiogroup","name":"plan_q15","title":"To test a plan variant, you can disable a join type with:","choices":["SET enable_hashjoin = off;","ALTER SYSTEM disable hashjoin;","RESET join_types;","SET join_mode = nestedloop;"],"correctAnswer":"SET enable_hashjoin = off;"},
  {"type":"radiogroup","name":"plan_q16","title":"Parallel plans require which preconditions?","choices":["Parallel-safe functions, sufficient workers, and query big enough","Always enabled by default without checks","Only sequential scans are parallel","Only hash joins are parallel"],"correctAnswer":"Parallel-safe functions, sufficient workers, and query big enough"},
  {"type":"radiogroup","name":"plan_q17","title":"Which settings bound parallelism?","choices":["max_worker_processes only","max_parallel_workers and max_parallel_workers_per_gather","shared_buffers and work_mem","jit and jit_above_cost"],"correctAnswer":"max_parallel_workers and max_parallel_workers_per_gather"},
  {"type":"radiogroup","name":"plan_q18","title":"Leader participation in parallel query means:","choices":["Leader never works","Leader can execute a part of the plan","Leader only schedules workers","Leader becomes idle"],"correctAnswer":"Leader can execute a part of the plan"},
  {"type":"radiogroup","name":"plan_q19","title":"Extended statistics (CREATE STATISTICS) help with:","choices":["I/O scheduling","Correlated/multivariate column stats (MCV, ndistinct, dependencies)","Autovacuum","WAL compression"],"correctAnswer":"Correlated/multivariate column stats (MCV, ndistinct, dependencies)"},
  {"type":"radiogroup","name":"plan_q20","title":"default_statistics_target affects:","choices":["Execution time directly","Sampling/detail of column histograms and MCVs","shared_buffers size","Parallelism level"],"correctAnswer":"Sampling/detail of column histograms and MCVs"},
  {"type":"radiogroup","name":"plan_q21","title":"A telltale sign of misestimation in EXPLAIN ANALYZE is:","choices":["Actual rows ≈ Planned rows","Actual rows ≫ Planned rows","Buffers all hits","Low planning time"],"correctAnswer":"Actual rows ≫ Planned rows"},
  {"type":"radiogroup","name":"plan_q22","title":"Which setting reduces cost of random I/O on SSDs?","choices":["Increase seq_page_cost","Lower random_page_cost","Lower cpu_tuple_cost","Increase jit_above_cost"],"correctAnswer":"Lower random_page_cost"},
  {"type":"radiogroup","name":"plan_q23","title":"Enable/disable parallelism for a session with:","choices":["SET parallel = on/off;","SET max_parallel_workers_per_gather = 0 or >0","ALTER SYSTEM parallel off","SET enable_parallel = off"],"correctAnswer":"SET max_parallel_workers_per_gather = 0 or >0"},
  {"type":"radiogroup","name":"plan_q24","title":"Hash join spills are visible in:","choices":["pg_stat_statements only","EXPLAIN (ANALYZE, BUFFERS) with \"memory usage\" notes / temporary files","pg_locks","pg_class"],"correctAnswer":"EXPLAIN (ANALYZE, BUFFERS) with \"memory usage\" notes / temporary files"},
  {"type":"radiogroup","name":"plan_q25","title":"Join order search is guided by:","choices":["Genetic algorithm only","Dynamic programming heuristics with cost estimates and stats","Fixed order of tables in FROM","Random sampling"],"correctAnswer":"Dynamic programming heuristics with cost estimates and stats"},
  {"type":"radiogroup","name":"plan_q26","title":"Bitmap Index Scan vs Index Scan:","choices":["Bitmap can combine multiple conditions efficiently","Index Scan always faster","Bitmap requires ordering","Index Scan uses more memory"],"correctAnswer":"Bitmap can combine multiple conditions efficiently"},
  {"type":"radiogroup","name":"plan_q27","title":"Which option adds row-by-row timing to EXPLAIN output?","choices":["ANALYZE","BUFFERS","TIMING","VERBOSE"],"correctAnswer":"TIMING"},
  {"type":"radiogroup","name":"plan_q28","title":"Functions labeled parallel unsafe:","choices":["Can run in workers","Prevent parallel plans for containing query parts","Are ignored by planner","Are converted automatically"],"correctAnswer":"Prevent parallel plans for containing query parts"},
  {"type":"radiogroup","name":"plan_q29","title":"Increase hash join memory by:","choices":["shared_buffers","work_mem (per node)","temp_buffers","effective_cache_size"],"correctAnswer":"work_mem (per node)"},
  {"type":"radiogroup","name":"plan_q30","title":"To quickly test alternative plans without changing schema:","choices":["SET enable_* GUCs (e.g., enable_nestloop) and compare EXPLAIN ANALYZE","Rewrite queries only","Reindex tables","Restart server"],"correctAnswer":"SET enable_* GUCs (e.g., enable_nestloop) and compare EXPLAIN ANALYZE"},
  {"type":"radiogroup","name":"plan_q31","title":"JIT may hurt performance when:","choices":["Queries are long-running and CPU-bound","Queries are very short; compilation overhead dominates","work_mem is high","Buffers are all hits"],"correctAnswer":"Queries are very short; compilation overhead dominates"},
  {"type":"radiogroup","name":"plan_q32","title":"enable_seqscan = off does what?","choices":["Forces index usage always","Discourages seqscan but still may be chosen when needed","Disables seqscan completely","Speeds up planning"],"correctAnswer":"Discourages seqscan but still may be chosen when needed"},
  {"type":"radiogroup","name":"plan_q33","title":"Which EXPLAIN option shows planner estimates only?","choices":["EXPLAIN","EXPLAIN (ANALYZE)","EXPLAIN (BUFFERS)","EXPLAIN (JIT)"],"correctAnswer":"EXPLAIN"},
  {"type":"radiogroup","name":"plan_q34","title":"A Merge Join is attractive when:","choices":["Inputs are already sorted or can be sorted cheaply","Data is tiny","Hash join memory is unlimited","Parallel workers are disabled"],"correctAnswer":"Inputs are already sorted or can be sorted cheaply"},
  {"type":"radiogroup","name":"plan_q35","title":"To help planner with correlated columns, use:","choices":["CREATE STATISTICS ... (dependencies)","VACUUM FULL","SET jit = on","SET random_page_cost = 1.0"],"correctAnswer":"CREATE STATISTICS ... (dependencies)"},
  {"type":"radiogroup","name":"plan_q36","title":"cpu_tuple_cost affects:","choices":["I/O cost only","Per-tuple CPU cost in estimates","Hash table size","Parallel workers count"],"correctAnswer":"Per-tuple CPU cost in estimates"},
  {"type":"radiogroup","name":"plan_q37","title":"effective_io_concurrency mainly helps:","choices":["Spinning disks random I/O","SSD read ahead for bitmap scans","Planner join order","Vacuum speed only"],"correctAnswer":"SSD read ahead for bitmap scans"},
  {"type":"radiogroup","name":"plan_q38","title":"Parallel Hash Join requires:","choices":["JIT enabled","Sufficient work_mem and parallel settings","Hash partitioning","BRIN index"],"correctAnswer":"Sufficient work_mem and parallel settings"},
  {"type":"radiogroup","name":"plan_q39","title":"EXPLAIN (ANALYZE, BUFFERS) shows \"shared read\" blocks. High values suggest:","choices":["Cache hits mostly","I/O-bound plan","JIT issue","Stats outdated only"],"correctAnswer":"I/O-bound plan"},
  {"type":"radiogroup","name":"plan_q40","title":"To inspect JIT details in EXPLAIN, use:","choices":["EXPLAIN (JIT) SELECT ...;","EXPLAIN (ANALYZE, JIT) SELECT ...;","SHOW jit;","SET jit_expressions_above_cost = 0;"],"correctAnswer":"EXPLAIN (ANALYZE, JIT) SELECT ...;"}
]

