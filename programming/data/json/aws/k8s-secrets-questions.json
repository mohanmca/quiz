[
    {
        "type": "radiogroup",
        "name": "q1",
        "title": "What is the primary purpose of Kubernetes Secrets in an AWS EKS cluster?",
        "choices": [
            "To store sensitive data such as passwords, OAuth tokens, and SSH keys in a secure, base64-encoded format",
            "To store application configuration files",
            "To manage pod networking configuration",
            "To define resource quotas for namespaces"
        ],
        "correctAnswer": "To store sensitive data such as passwords, OAuth tokens, and SSH keys in a secure, base64-encoded format"
    },
    {
        "type": "radiogroup",
        "name": "q2",
        "title": "Which Kubernetes Secret type is used for storing Docker registry credentials?",
        "choices": [
            "kubernetes.io/dockerconfigjson",
            "kubernetes.io/tls",
            "kubernetes.io/basic-auth",
            "kubernetes.io/ssh-auth"
        ],
        "correctAnswer": "kubernetes.io/dockerconfigjson"
    },
    {
        "type": "radiogroup",
        "name": "q3",
        "title": "How are Kubernetes Secrets encoded by default?",
        "choices": [
            "Base64 encoding",
            "AES-256 encryption",
            "Plain text",
            "MD5 hashing"
        ],
        "correctAnswer": "Base64 encoding"
    },
    {
        "type": "radiogroup",
        "name": "q4",
        "title": "What is the AWS Secret Store CSI Driver used for in EKS clusters?",
        "choices": [
            "To mount secrets from AWS Secrets Manager and Parameter Store as volumes in pods",
            "To encrypt secrets at rest in etcd",
            "To rotate secrets automatically",
            "To backup secrets to S3"
        ],
        "correctAnswer": "To mount secrets from AWS Secrets Manager and Parameter Store as volumes in pods"
    },
    {
        "type": "radiogroup",
        "name": "q5",
        "title": "What is a key advantage of using the Secret Store CSI Driver over traditional Kubernetes Secrets?",
        "choices": [
            "Secrets are fetched directly from AWS services at runtime and never stored in etcd",
            "Secrets are automatically encrypted with customer-managed keys",
            "Secrets can be shared across multiple clusters",
            "Secrets are cached locally for better performance"
        ],
        "correctAnswer": "Secrets are fetched directly from AWS services at runtime and never stored in etcd"
    },
    {
        "type": "radiogroup",
        "name": "q6",
        "title": "What does the Secret Store CSI Driver require to access AWS Secrets Manager?",
        "choices": [
            "IAM permissions and a SecretProviderClass resource",
            "Only a valid AWS access key",
            "A VPC endpoint for Secrets Manager",
            "A dedicated node group for secret management"
        ],
        "correctAnswer": "IAM permissions and a SecretProviderClass resource"
    },
    {
        "type": "radiogroup",
        "name": "q7",
        "title": "What is the primary function of the External Secrets Operator?",
        "choices": [
            "To synchronize secrets from external systems into Kubernetes Secret objects",
            "To encrypt Kubernetes Secrets with external KMS keys",
            "To backup Kubernetes Secrets to external storage",
            "To validate secret formats before creation"
        ],
        "correctAnswer": "To synchronize secrets from external systems into Kubernetes Secret objects"
    },
    {
        "type": "radiogroup",
        "name": "q8",
        "title": "Which resource defines the mapping between external secret stores and Kubernetes Secrets in External Secrets Operator?",
        "choices": [
            "ExternalSecret",
            "SecretStore",
            "ClusterSecretStore",
            "SecretMapping"
        ],
        "correctAnswer": "ExternalSecret"
    },
    {
        "type": "radiogroup",
        "name": "q9",
        "title": "What is the difference between SecretStore and ClusterSecretStore in External Secrets Operator?",
        "choices": [
            "SecretStore is namespace-scoped, ClusterSecretStore is cluster-scoped",
            "SecretStore supports AWS only, ClusterSecretStore supports multiple providers",
            "SecretStore is for read-only access, ClusterSecretStore allows write access",
            "SecretStore caches secrets, ClusterSecretStore fetches them on-demand"
        ],
        "correctAnswer": "SecretStore is namespace-scoped, ClusterSecretStore is cluster-scoped"
    },
    {
        "type": "radiogroup",
        "name": "q10",
        "title": "How does External Secrets Operator authenticate with AWS Secrets Manager?",
        "choices": [
            "Using IAM roles, IRSA, or static credentials",
            "Only through AWS access keys stored in environment variables",
            "Through AWS CLI configuration files",
            "Using OAuth 2.0 tokens"
        ],
        "correctAnswer": "Using IAM roles, IRSA, or static credentials"
    },
    {
        "type": "radiogroup",
        "name": "q11",
        "title": "What controls how frequently External Secrets Operator refreshes secrets from external stores?",
        "choices": [
            "The refreshInterval field in the ExternalSecret resource",
            "A global configuration in the operator deployment",
            "The TTL setting in AWS Secrets Manager",
            "The rotation schedule defined in the SecretStore"
        ],
        "correctAnswer": "The refreshInterval field in the ExternalSecret resource"
    },
    {
        "type": "radiogroup",
        "name": "q12",
        "title": "What happens when External Secrets Operator detects a change in the external secret store?",
        "choices": [
            "It updates the corresponding Kubernetes Secret automatically",
            "It sends a notification to the cluster administrator",
            "It creates a new version of the secret with a different name",
            "It waits for manual approval before updating"
        ],
        "correctAnswer": "It updates the corresponding Kubernetes Secret automatically"
    },
    {
        "type": "radiogroup",
        "name": "q13",
        "title": "What is IRSA in the context of AWS EKS?",
        "choices": [
            "IAM Roles for Service Accounts - a way to provide AWS credentials to pods",
            "Internal Resource Security Architecture",
            "Inter-Region Secret Access protocol",
            "Identity Resolution Service for Authentication"
        ],
        "correctAnswer": "IAM Roles for Service Accounts - a way to provide AWS credentials to pods"
    },
    {
        "type": "radiogroup",
        "name": "q14",
        "title": "What is required to enable IRSA in an EKS cluster?",
        "choices": [
            "An OIDC identity provider associated with the cluster",
            "A dedicated IAM user for each service account",
            "AWS Systems Manager Agent on all nodes",
            "A VPC endpoint for the IAM service"
        ],
        "correctAnswer": "An OIDC identity provider associated with the cluster"
    },
    {
        "type": "radiogroup",
        "name": "q15",
        "title": "How are AWS credentials provided to pods using IRSA?",
        "choices": [
            "Through projected service account tokens that are exchanged for AWS credentials",
            "Through environment variables set by the kubelet",
            "Through files written by the AWS CLI during pod startup",
            "Through a sidecar container that manages credentials"
        ],
        "correctAnswer": "Through projected service account tokens that are exchanged for AWS credentials"
    },
    {
        "type": "radiogroup",
        "name": "q16",
        "title": "What annotation is required on a Kubernetes Service Account to enable IRSA?",
        "choices": [
            "eks.amazonaws.com/role-arn",
            "iam.amazonaws.com/role",
            "aws.amazon.com/role-arn",
            "kubernetes.io/aws-role"
        ],
        "correctAnswer": "eks.amazonaws.com/role-arn"
    },
    {
        "type": "radiogroup",
        "name": "q17",
        "title": "In IRSA, what should the audience field be set to in the IAM role trust policy?",
        "choices": [
            "sts.amazonaws.com",
            "eks.amazonaws.com",
            "iam.amazonaws.com",
            "kubernetes.amazonaws.com"
        ],
        "correctAnswer": "sts.amazonaws.com"
    },
    {
        "type": "radiogroup",
        "name": "q18",
        "title": "How are Kubernetes Secrets scoped within a cluster?",
        "choices": [
            "Secrets are namespace-scoped and only accessible within their namespace",
            "Secrets are cluster-scoped and accessible from any namespace",
            "Secrets are node-scoped and only accessible on specific nodes",
            "Secrets are pod-scoped and only accessible by the creating pod"
        ],
        "correctAnswer": "Secrets are namespace-scoped and only accessible within their namespace"
    },
    {
        "type": "radiogroup",
        "name": "q19",
        "title": "What is the recommended approach for sharing secrets across multiple namespaces?",
        "choices": [
            "Create separate Secret objects in each namespace or use External Secrets Operator",
            "Use ClusterSecrets which are accessible cluster-wide",
            "Mount secrets from the kube-system namespace",
            "Copy secrets manually using kubectl commands"
        ],
        "correctAnswer": "Create separate Secret objects in each namespace or use External Secrets Operator"
    },
    {
        "type": "radiogroup",
        "name": "q20",
        "title": "Which RBAC resource controls access to secrets within a namespace?",
        "choices": [
            "Role and RoleBinding",
            "ClusterRole and ClusterRoleBinding",
            "SecurityPolicy and PolicyBinding",
            "ServiceAccount and AccountBinding"
        ],
        "correctAnswer": "Role and RoleBinding"
    },
    {
        "type": "radiogroup",
        "name": "q21",
        "title": "What is a security best practice for protecting Kubernetes Secrets in EKS?",
        "choices": [
            "Enable envelope encryption using AWS KMS",
            "Store secrets in ConfigMaps instead",
            "Use only environment variables for secrets",
            "Disable RBAC for easier access"
        ],
        "correctAnswer": "Enable envelope encryption using AWS KMS"
    },
    {
        "type": "radiogroup",
        "name": "q22",
        "title": "What is the most secure way to consume secrets in a pod?",
        "choices": [
            "Mount secrets as files using volumes",
            "Pass secrets as command-line arguments",
            "Store secrets in environment variables",
            "Embed secrets directly in the container image"
        ],
        "correctAnswer": "Mount secrets as files using volumes"
    },
    {
        "type": "radiogroup",
        "name": "q23",
        "title": "Which principle should be followed when granting access to secrets?",
        "choices": [
            "Least privilege - grant minimum necessary permissions",
            "Maximum access - allow broad permissions for flexibility",
            "Equal access - give all services the same permissions",
            "No restrictions - secrets should be freely accessible"
        ],
        "correctAnswer": "Least privilege - grant minimum necessary permissions"
    },
    {
        "type": "radiogroup",
        "name": "q24",
        "title": "What should be avoided to prevent secrets from being exposed in container images?",
        "choices": [
            "Embedding secrets in Dockerfiles or images",
            "Using init containers for secret retrieval",
            "Mounting secrets as volumes",
            "Using service accounts for authentication"
        ],
        "correctAnswer": "Embedding secrets in Dockerfiles or images"
    },
    {
        "type": "radiogroup",
        "name": "q25",
        "title": "Which AWS service can be used to audit secret access in EKS clusters?",
        "choices": [
            "AWS CloudTrail and EKS audit logs",
            "AWS Config only",
            "AWS Inspector only",
            "AWS GuardDuty only"
        ],
        "correctAnswer": "AWS CloudTrail and EKS audit logs"
    },
    {
        "type": "radiogroup",
        "name": "q26",
        "title": "What is the benefit of marking Kubernetes Secrets as immutable?",
        "choices": [
            "Prevents accidental changes and improves cache performance",
            "Automatically encrypts the secret data",
            "Enables cross-namespace sharing",
            "Reduces secret size requirements"
        ],
        "correctAnswer": "Prevents accidental changes and improves cache performance"
    },
    {
        "type": "radiogroup",
        "name": "q27",
        "title": "What is the recommended approach for secret rotation in production environments?",
        "choices": [
            "Use External Secrets Operator with automatic refresh intervals",
            "Manually update secrets on a fixed schedule",
            "Restart pods whenever secrets change",
            "Use long-lived secrets that never expire"
        ],
        "correctAnswer": "Use External Secrets Operator with automatic refresh intervals"
    },
    {
        "type": "radiogroup",
        "name": "q28",
        "title": "Which AWS services integrate well with External Secrets Operator for centralized secret management?",
        "choices": [
            "AWS Secrets Manager and AWS Systems Manager Parameter Store",
            "AWS S3 and AWS DynamoDB",
            "AWS Lambda and AWS API Gateway",
            "AWS CloudFormation and AWS CloudWatch"
        ],
        "correctAnswer": "AWS Secrets Manager and AWS Systems Manager Parameter Store"
    },
    {
        "type": "radiogroup",
        "name": "q29",
        "title": "What is the recommended approach for managing secrets across multiple AWS regions?",
        "choices": [
            "Use AWS Secrets Manager with cross-region replication",
            "Store secrets in a single region and access remotely",
            "Duplicate secrets manually in each region",
            "Use local storage on each cluster node"
        ],
        "correctAnswer": "Use AWS Secrets Manager with cross-region replication"
    },
    {
        "type": "radiogroup",
        "name": "q30",
        "title": "How can Network Policies help secure secret access in Kubernetes?",
        "choices": [
            "By restricting network traffic between pods and external secret stores",
            "By encrypting secret data in transit",
            "By automatically rotating secret values",
            "By backing up secrets to remote locations"
        ],
        "correctAnswer": "By restricting network traffic between pods and external secret stores"
    },
    {
        "type": "radiogroup",
        "name": "q31",
        "title": "What should be included in an emergency procedure when secrets are compromised?",
        "choices": [
            "Immediately rotate secrets, revoke credentials, and audit access logs",
            "Only change the secret values in AWS Secrets Manager",
            "Restart all pods using the compromised secrets",
            "Delete and recreate the entire cluster"
        ],
        "correctAnswer": "Immediately rotate secrets, revoke credentials, and audit access logs"
    },
    {
        "type": "radiogroup",
        "name": "q32",
        "title": "Which Pod Security Standard setting helps prevent privilege escalation when using secrets?",
        "choices": [
            "Restricted standard that enforces runAsNonRoot and drops capabilities",
            "Baseline standard that allows privileged containers",
            "Privileged standard that permits all operations",
            "Custom standard that enables all security features"
        ],
        "correctAnswer": "Restricted standard that enforces runAsNonRoot and drops capabilities"
    },
    {
        "type": "radiogroup",
        "name": "q33",
        "title": "What is an important consideration for secret performance in large-scale deployments?",
        "choices": [
            "Use projected volumes and implement caching strategies",
            "Store all secrets in environment variables",
            "Increase the frequency of secret rotation",
            "Use only cluster-scoped secrets"
        ],
        "correctAnswer": "Use projected volumes and implement caching strategies"
    },
    {
        "type": "radiogroup",
        "name": "q34",
        "title": "Which AWS services help ensure compliance when managing secrets in EKS?",
        "choices": [
            "AWS Config, AWS CloudTrail, and AWS Security Hub",
            "AWS Lambda, AWS API Gateway, and AWS S3",
            "AWS EC2, AWS VPC, and AWS Route 53",
            "AWS RDS, AWS ElastiCache, and AWS Redshift"
        ],
        "correctAnswer": "AWS Config, AWS CloudTrail, and AWS Security Hub"
    },
    {
        "type": "radiogroup",
        "name": "q35",
        "title": "What is a key consideration for secret lifecycle management in production?",
        "choices": [
            "Implement automated rotation, monitor usage, and maintain audit trails",
            "Use only manual secret updates for better control",
            "Store secrets indefinitely without expiration",
            "Allow all applications access to all secrets"
        ],
        "correctAnswer": "Implement automated rotation, monitor usage, and maintain audit trails"
    }
]
